/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as DashboardProductsImport } from './routes/dashboard/products'
import { Route as DashboardPermisionariosImport } from './routes/dashboard/permisionarios'
import { Route as DashboardClientesImport } from './routes/dashboard/clientes'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductsRoute = DashboardProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPermisionariosRoute = DashboardPermisionariosImport.update({
  id: '/permisionarios',
  path: '/permisionarios',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardClientesRoute = DashboardClientesImport.update({
  id: '/clientes',
  path: '/clientes',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/clientes': {
      id: '/dashboard/clientes'
      path: '/clientes'
      fullPath: '/dashboard/clientes'
      preLoaderRoute: typeof DashboardClientesImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/permisionarios': {
      id: '/dashboard/permisionarios'
      path: '/permisionarios'
      fullPath: '/dashboard/permisionarios'
      preLoaderRoute: typeof DashboardPermisionariosImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/products': {
      id: '/dashboard/products'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardClientesRoute: typeof DashboardClientesRoute
  DashboardPermisionariosRoute: typeof DashboardPermisionariosRoute
  DashboardProductsRoute: typeof DashboardProductsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardClientesRoute: DashboardClientesRoute,
  DashboardPermisionariosRoute: DashboardPermisionariosRoute,
  DashboardProductsRoute: DashboardProductsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/clientes': typeof DashboardClientesRoute
  '/dashboard/permisionarios': typeof DashboardPermisionariosRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/clientes': typeof DashboardClientesRoute
  '/dashboard/permisionarios': typeof DashboardPermisionariosRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/clientes': typeof DashboardClientesRoute
  '/dashboard/permisionarios': typeof DashboardPermisionariosRoute
  '/dashboard/products': typeof DashboardProductsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/clientes'
    | '/dashboard/permisionarios'
    | '/dashboard/products'
    | '/dashboard/settings'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/clientes'
    | '/dashboard/permisionarios'
    | '/dashboard/products'
    | '/dashboard/settings'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/clientes'
    | '/dashboard/permisionarios'
    | '/dashboard/products'
    | '/dashboard/settings'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/clientes",
        "/dashboard/permisionarios",
        "/dashboard/products",
        "/dashboard/settings",
        "/dashboard/"
      ]
    },
    "/dashboard/clientes": {
      "filePath": "dashboard/clientes.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/permisionarios": {
      "filePath": "dashboard/permisionarios.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products": {
      "filePath": "dashboard/products.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
